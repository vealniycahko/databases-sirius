version: "3.8"
services:
  postgres:
    container_name: ${APP_NAME}-postgres
    build:
      context: .
      dockerfile: ./dockerfile-pg
      args:
        POSTGRES_DB: ${POSTGRES_DB}
    environment:
      POSTGRESQL_DATABASE: ${POSTGRES_DB}
      POSTGRESQL_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_SHARED_PRELOAD_LIBRARIES: "pgaudit,pg_cron"
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: repl_user
      POSTGRESQL_REPLICATION_PASSWORD: repl_password
    ports:
      - "${POSTGRES_PORT}:5432"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 1s
      timeout: 1s
      retries: 30
    restart: unless-stopped
  flyway:
    image: flyway/flyway:9.3.1
    command: -url=jdbc:postgresql://host.docker.internal:${POSTGRES_PORT}/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} migrate
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
  flask:
    container_name: ${APP_NAME}-flask
    build: .
    command: >
      sh -c "python3 -m flask run --host=0.0.0.0"
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file: .env
    environment:
      FLASK_RUN_PORT: ${APP_PORT}
      POSTGRES_HOST: host.docker.internal
      REDIS_HOST: host.docker.internal
      CLICKHOUSE_HOST: host.docker.internal
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
  clickhouse:
    container_name: clickhouse_pg_replication
    image: bitnami/clickhouse:22.3.15
    volumes:
      - ./clickhouse/init-replication.sh:/docker-entrypoint-initdb.d/init-click.sh
    environment:
      CLICKHOUSE_ADMIN_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_ADMIN_PASSWORD: ${CLICKHOUSE_PASSWORD}
    ports:
      - "${CLICKHOUSE_PORT}:8123"
    depends_on:
      postgres:
        condition: service_healthy
