version: "3.8"
services:
  postgres:
    container_name: ${APP_NAME}-postgres
    image: postgres:14.3
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    user: postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 1s
      timeout: 1s
      retries: 30
    restart: unless-stopped
  redis:
    container_name: ${APP_NAME}-redis
    image: redis:7.0.0
    command: >
      --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 1s
      retries: 30
    restart: unless-stopped
  flyway:
    image: flyway/flyway:9.3.1
    command: -url=jdbc:postgresql://host.docker.internal:${POSTGRES_PORT}/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} migrate
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
  gin:
    container_name: ${APP_NAME}-gin
    build: .
    command: >
      sh -c "go run ."
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file: .env
    environment:
      POSTGRES_HOST: host.docker.internal
      REDIS_HOST: host.docker.internal
      GIN_MODE: release
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
